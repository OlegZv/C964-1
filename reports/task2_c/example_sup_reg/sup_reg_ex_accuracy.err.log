Traceback (most recent call last):
  File "C:\Users\ashej\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\ashej\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ashej\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ashej\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ashej\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\ashej\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 222, in __aexit__
    await self.gen.athrow(typ, value, traceback)
  File "C:\Users\ashej\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\nbclient\client.py", line 608, in async_setup_kernel
    yield
  File "C:\Users\ashej\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\ashej\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\ashej\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig, ax = plt.subplots()
x_min, x_max = 4.25, 7.75
y_min, y_max = 4.25, 7.75
m = .5 # margin of error
x = np.linspace(x_min, x_max, 10)
ax.set_ylim(y_min, y_max)
ax.set_xlim(x_min, x_max)

plt.plot(x, y, 'g', linewidth=3)
plt.scatter(y_test, y_pred, color="black")
ax.fill_between(x, y - m, y + m, alpha=0.2)

ax.set_xlabel('y_test  = actual values', fontsize=8, labelpad=1)
ax.set_ylabel('y_pre(d = predicted values', fontsize=8)
plt.figtext(0.5, -0.06, "Black dots = actual values paired with predicted values. \n \
    green line = when predicted values equal actual values. \n \
    blue area = margin or error of .5", wrap=True, horizontalalignment='center' );

------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Cell [1;32mIn[11], line 9[0m
[0;32m      6[0m ax[38;5;241m.[39mset_ylim(y_min, y_max)
[0;32m      7[0m ax[38;5;241m.[39mset_xlim(x_min, x_max)
[1;32m----> 9[0m [43mplt[49m[38;5;241;43m.[39;49m[43mplot[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mg[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mlinewidth[49m[38;5;241;43m=[39;49m[38;5;241;43m3[39;49m[43m)[49m
[0;32m     10[0m plt[38;5;241m.[39mscatter(y_test, y_pred, color[38;5;241m=[39m[38;5;124m"[39m[38;5;124mblack[39m[38;5;124m"[39m)
[0;32m     11[0m ax[38;5;241m.[39mfill_between(x, y [38;5;241m-[39m m, y [38;5;241m+[39m m, alpha[38;5;241m=[39m[38;5;241m0.2[39m)

File [1;32m~\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\matplotlib\pyplot.py:2748[0m, in [0;36mplot[1;34m(scalex, scaley, data, *args, **kwargs)[0m
[0;32m   2746[0m [38;5;129m@_copy_docstring_and_deprecators[39m(Axes[38;5;241m.[39mplot)
[0;32m   2747[0m [38;5;28;01mdef[39;00m [38;5;21mplot[39m([38;5;241m*[39margs, scalex[38;5;241m=[39m[38;5;28;01mTrue[39;00m, scaley[38;5;241m=[39m[38;5;28;01mTrue[39;00m, data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m-> 2748[0m     [38;5;28;01mreturn[39;00m [43mgca[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mplot[49m[43m([49m
[0;32m   2749[0m [43m        [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[43mscalex[49m[38;5;241;43m=[39;49m[43mscalex[49m[43m,[49m[43m [49m[43mscaley[49m[38;5;241;43m=[39;49m[43mscaley[49m[43m,[49m
[0;32m   2750[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43m([49m[43m{[49m[38;5;124;43m"[39;49m[38;5;124;43mdata[39;49m[38;5;124;43m"[39;49m[43m:[49m[43m [49m[43mdata[49m[43m}[49m[43m [49m[38;5;28;43;01mif[39;49;00m[43m [49m[43mdata[49m[43m [49m[38;5;129;43;01mis[39;49;00m[43m [49m[38;5;129;43;01mnot[39;49;00m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m [49m[38;5;28;43;01melse[39;49;00m[43m [49m[43m{[49m[43m}[49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [1;32m~\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\matplotlib\axes\_axes.py:1668[0m, in [0;36mAxes.plot[1;34m(self, scalex, scaley, data, *args, **kwargs)[0m
[0;32m   1425[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[0;32m   1426[0m [38;5;124;03mPlot y versus x as lines and/or markers.[39;00m
[0;32m   1427[0m 
[1;32m   (...)[0m
[0;32m   1665[0m [38;5;124;03m(``'green'``) or hex strings (``'#008000'``).[39;00m
[0;32m   1666[0m [38;5;124;03m"""[39;00m
[0;32m   1667[0m kwargs [38;5;241m=[39m cbook[38;5;241m.[39mnormalize_kwargs(kwargs, mlines[38;5;241m.[39mLine2D)
[1;32m-> 1668[0m lines [38;5;241m=[39m [[38;5;241m*[39m[38;5;28mself[39m[38;5;241m.[39m_get_lines([38;5;241m*[39margs, data[38;5;241m=[39mdata, [38;5;241m*[39m[38;5;241m*[39mkwargs)]
[0;32m   1669[0m [38;5;28;01mfor[39;00m line [38;5;129;01min[39;00m lines:
[0;32m   1670[0m     [38;5;28mself[39m[38;5;241m.[39madd_line(line)

File [1;32m~\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\matplotlib\axes\_base.py:311[0m, in [0;36m_process_plot_var_args.__call__[1;34m(self, data, *args, **kwargs)[0m
[0;32m    309[0m     this [38;5;241m+[39m[38;5;241m=[39m args[[38;5;241m0[39m],
[0;32m    310[0m     args [38;5;241m=[39m args[[38;5;241m1[39m:]
[1;32m--> 311[0m [38;5;28;01myield from[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_plot_args[49m[43m([49m
[0;32m    312[0m [43m    [49m[43mthis[49m[43m,[49m[43m [49m[43mkwargs[49m[43m,[49m[43m [49m[43mambiguous_fmt_datakey[49m[38;5;241;43m=[39;49m[43mambiguous_fmt_datakey[49m[43m)[49m

File [1;32m~\.virtualenvs\jupyter-books-WZpnkDri\Lib\site-packages\matplotlib\axes\_base.py:504[0m, in [0;36m_process_plot_var_args._plot_args[1;34m(self, tup, kwargs, return_kwargs, ambiguous_fmt_datakey)[0m
[0;32m    501[0m     [38;5;28mself[39m[38;5;241m.[39maxes[38;5;241m.[39myaxis[38;5;241m.[39mupdate_units(y)
[0;32m    503[0m [38;5;28;01mif[39;00m x[38;5;241m.[39mshape[[38;5;241m0[39m] [38;5;241m!=[39m y[38;5;241m.[39mshape[[38;5;241m0[39m]:
[1;32m--> 504[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mx and y must have same first dimension, but [39m[38;5;124m"[39m
[0;32m    505[0m                      [38;5;124mf[39m[38;5;124m"[39m[38;5;124mhave shapes [39m[38;5;132;01m{[39;00mx[38;5;241m.[39mshape[38;5;132;01m}[39;00m[38;5;124m and [39m[38;5;132;01m{[39;00my[38;5;241m.[39mshape[38;5;132;01m}[39;00m[38;5;124m"[39m)
[0;32m    506[0m [38;5;28;01mif[39;00m x[38;5;241m.[39mndim [38;5;241m>[39m [38;5;241m2[39m [38;5;129;01mor[39;00m y[38;5;241m.[39mndim [38;5;241m>[39m [38;5;241m2[39m:
[0;32m    507[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mx and y can be no greater than 2D, but have [39m[38;5;124m"[39m
[0;32m    508[0m                      [38;5;124mf[39m[38;5;124m"[39m[38;5;124mshapes [39m[38;5;132;01m{[39;00mx[38;5;241m.[39mshape[38;5;132;01m}[39;00m[38;5;124m and [39m[38;5;132;01m{[39;00my[38;5;241m.[39mshape[38;5;132;01m}[39;00m[38;5;124m"[39m)

[1;31mValueError[0m: x and y must have same first dimension, but have shapes (10,) and (15, 1)
ValueError: x and y must have same first dimension, but have shapes (10,) and (15, 1)

